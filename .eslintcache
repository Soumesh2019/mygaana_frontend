[{"C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\index.js":"1","C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\App.js":"2","C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\authentication\\SignUp.js":"3","C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\authentication\\SignIn.js":"4","C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\context\\context.js":"5","C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\config.js":"6","C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\upload\\upload.js":"7"},{"size":321,"mtime":1611035854508,"results":"8","hashOfConfig":"9"},{"size":722,"mtime":1611418156762,"results":"10","hashOfConfig":"9"},{"size":2116,"mtime":1611411373965,"results":"11","hashOfConfig":"9"},{"size":1540,"mtime":1611411354286,"results":"12","hashOfConfig":"9"},{"size":1995,"mtime":1611415002810,"results":"13","hashOfConfig":"9"},{"size":81,"mtime":1611141848944,"results":"14","hashOfConfig":"9"},{"size":967,"mtime":1611414552510,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1mp5myi",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\index.js",[],["33","34"],"C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\App.js",[],"C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\authentication\\SignUp.js",["35"],"import React from \"react\";\r\nimport { useGlobalContext } from \"../context/context\";\r\n\r\nconst SignUp = () => {\r\n  const {\r\n    email,\r\n    password,\r\n    confirmPass,\r\n    setEmail,\r\n    setPassword,\r\n    setConfirmPass,\r\n    SignUp,\r\n  } = useGlobalContext();\r\n\r\n  const handleSignUp = async (e) => {\r\n    e.preventDefault();\r\n    await SignUp(email, password, confirmPass);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row container\">\r\n        <div className=\"col m6 s12 vertical-wrapper\">\r\n          <h1>Sign Up</h1>\r\n        </div>\r\n\r\n        <form className=\"col m6 s12\" onSubmit={handleSignUp}>\r\n          <div className=\"row\">\r\n            <div className=\"col m12 s12 input-field\">\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <label htmlFor=\"email\">E-Mail</label>\r\n            </div>\r\n            <div className=\"col m12 s12 input-field\">\r\n              <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <label htmlFor=\"password\">Password</label>\r\n            </div>\r\n            <div className=\"col m12 s12 input-field\">\r\n              <input\r\n                id=\"confirmPass\"\r\n                type=\"password\"\r\n                value={confirmPass}\r\n                onChange={(e) => setConfirmPass(e.target.value)}\r\n              />\r\n              <label htmlFor=\"confirmPass\">Confirm Password</label>\r\n            </div>\r\n          </div>\r\n          <button\r\n            className=\"btn waves-effect waves-light\"\r\n            type=\"submit\"\r\n            name=\"action\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <a\r\n          href=\"#\"\r\n          className=\"waves-effect waves-teal btn-flat col offset-m3 m6 offset-m4 center-align\"\r\n        >\r\n          Already Have An Account? Sign In\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\authentication\\SignIn.js",["36"],"import React from \"react\";\r\nimport { useGlobalContext } from \"../context/context\";\r\n\r\nconst SignIn = () => {\r\n  const { email, password, setEmail, setPassword, signIn } = useGlobalContext();\r\n\r\n  const handleSign = async (e) => {\r\n    e.preventDefault();\r\n    await signIn(email, password);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row container\">\r\n        <div className=\"col m6 s12 \">\r\n          <h1>Sign In</h1>\r\n        </div>\r\n\r\n        <form className=\"col m6 s12\" onSubmit={handleSign}>\r\n          <div className=\"row\">\r\n            <div className=\"col m12 s12 input-field\">\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <label htmlFor=\"email\">E-Mail</label>\r\n            </div>\r\n            <div className=\"col m12 s12 input-field\">\r\n              <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <label htmlFor=\"password\">Password</label>\r\n            </div>\r\n          </div>\r\n          <button className=\"btn waves-effect waves-light\">Login</button>\r\n        </form>\r\n        <a\r\n          className=\"waves-effect waves-teal btn-flat col offset-m3 m6 offset-m3 center-align\"\r\n          href=\"#\"\r\n        >\r\n          New User? Sign Up\r\n        </a>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\context\\context.js",[],"C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\config.js",[],"C:\\Users\\hvide\\Desktop\\react_Native\\mygaana\\src\\upload\\upload.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":65,"column":9,"nodeType":"43","endLine":68,"endColumn":10},{"ruleId":"41","severity":1,"message":"42","line":42,"column":9,"nodeType":"43","endLine":45,"endColumn":10},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]